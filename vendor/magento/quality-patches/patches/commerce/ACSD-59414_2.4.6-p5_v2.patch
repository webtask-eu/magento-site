diff --git a/vendor/magento/module-catalog-rule-staging/Model/CatalogRuleApplier.php b/vendor/magento/module-catalog-rule-staging/Model/CatalogRuleApplier.php
index e62cd775e8b..8ee4258caa1 100644
--- a/vendor/magento/module-catalog-rule-staging/Model/CatalogRuleApplier.php
+++ b/vendor/magento/module-catalog-rule-staging/Model/CatalogRuleApplier.php
@@ -9,10 +9,8 @@ use Magento\CatalogRule\Model\Indexer\Rule\RuleProductProcessor;
 use Magento\Staging\Model\StagingApplierInterface;
 use Magento\Framework\App\ObjectManager;
 use Magento\Framework\Indexer\IndexerRegistry;
+use Magento\Catalog\Model\Indexer\Product\Price\Processor as PriceProcessor;
 
-/**
- * Class CatalogRuleApplier
- */
 class CatalogRuleApplier implements StagingApplierInterface
 {
     /**
@@ -36,11 +34,12 @@ class CatalogRuleApplier implements StagingApplierInterface
         IndexerRegistry $indexerRegistry = null
     ) {
         $this->ruleProductProcessor = $ruleProductProcessor;
-        $this->indexerRegistry = $indexerRegistry
-            ?: ObjectManager::getInstance()->get(IndexerRegistry::class);
+        $this->indexerRegistry = $indexerRegistry ?: ObjectManager::getInstance()->get(IndexerRegistry::class);
     }
 
     /**
+     * Invalidate related indexers
+     *
      * @param array $entityIds
      * @return void
      */
@@ -48,10 +47,7 @@ class CatalogRuleApplier implements StagingApplierInterface
     {
         if (!empty($entityIds)) {
             $this->ruleProductProcessor->markIndexerAsInvalid();
-            $this->indexerRegistry->get(\Magento\CatalogRule\Model\Indexer\Product\ProductRuleProcessor::INDEXER_ID)
-                ->invalidate();
-            $this->indexerRegistry->get(\Magento\Catalog\Model\Indexer\Product\Price\Processor::INDEXER_ID)
-                ->invalidate();
+            $this->indexerRegistry->get(PriceProcessor::INDEXER_ID)->invalidate();
         }
     }
 }
