diff --git a/vendor/magento/module-staging/Model/Entity/Update/Action/Save/SaveAction.php b/vendor/magento/module-staging/Model/Entity/Update/Action/Save/SaveAction.php
index 0fa78c23008..60f589eee37 100644
--- a/vendor/magento/module-staging/Model/Entity/Update/Action/Save/SaveAction.php
+++ b/vendor/magento/module-staging/Model/Entity/Update/Action/Save/SaveAction.php
@@ -29,6 +29,7 @@ class SaveAction implements ActionInterface
     /**
      * @var UpdateService
      * @deprecated 100.1.0 Since functionality if this service was implemented in SaveAction class
+     * @see nothing
      */
     private $updateService;
 
@@ -118,22 +119,19 @@ class SaveAction implements ActionInterface
 
         if (!isset($stagingData['update_id']) || empty($stagingData['update_id'])) {
             $update = $this->createUpdate($stagingData);
+            $entity = $this->entityHydrator->hydrate($entityData);
             $this->versionManager->setCurrentVersionId($update->getId());
-
-            $this->schedule($entityData, $update->getId());
+            $this->entityStaging->schedule($entity, $update->getId(), []);
         } else {
             $update = $this->updateRepository->get($stagingData['update_id']);
             $this->versionManager->setCurrentVersionId($update->getId());
 
             $update = $this->editUpdate($stagingData);
 
-            $this->schedule(
-                $entityData,
-                $update->getId(),
-                [
-                    'origin_in' => $stagingData['update_id'],
-                ]
-            );
+            $entity = $this->entityHydrator->hydrate($entityData);
+            $this->entityStaging->schedule($entity, $update->getId(), [
+                'origin_in' => $stagingData['update_id'],
+            ]);
         }
 
         return true;
@@ -200,19 +198,4 @@ class SaveAction implements ActionInterface
 
         return $update;
     }
-
-    /**
-     * Set schedule for requested entity
-     *
-     * @param array $entityData
-     * @param int $version
-     * @param array $arguments
-     * @return void
-     */
-    private function schedule(array $entityData, $version, array $arguments = [])
-    {
-        $entity = $this->entityHydrator->hydrate($entityData);
-
-        $this->entityStaging->schedule($entity, $version, $arguments);
-    }
 }
