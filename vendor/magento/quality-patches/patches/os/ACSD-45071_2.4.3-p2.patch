diff --git a/vendor/magento/module-catalog-import-export/Model/Import/Product.php b/vendor/magento/module-catalog-import-export/Model/Import/Product.php
index d0c93658fc28..47646eea4ae2 100644
--- a/vendor/magento/module-catalog-import-export/Model/Import/Product.php
+++ b/vendor/magento/module-catalog-import-export/Model/Import/Product.php
@@ -16,6 +16,7 @@
 use Magento\CatalogImportExport\Model\Import\Product\StatusProcessor;
 use Magento\CatalogImportExport\Model\Import\Product\StockProcessor;
 use Magento\CatalogImportExport\Model\StockItemImporterInterface;
+use Magento\CatalogImportExport\Model\StockItemProcessorInterface;
 use Magento\CatalogInventory\Api\Data\StockItemInterface;
 use Magento\Framework\App\Filesystem\DirectoryList;
 use Magento\Framework\App\ObjectManager;
@@ -227,7 +228,6 @@ class Product extends AbstractEntity
      * Links attribute name-to-link type ID.
      *
      * @deprecated 101.1.0 use DI for LinkProcessor class if you want to add additional types
-     *
      * @var array
      */
     protected $_linkNameToId = [
@@ -767,6 +767,11 @@ class Product extends AbstractEntity
      */
     private $linkProcessor;
 
+    /**
+     * @var StockItemProcessorInterface
+     */
+    private $stockItemProcessor;
+
     /**
      * @var File
      */
@@ -821,6 +826,7 @@ class Product extends AbstractEntity
      * @param StockProcessor|null $stockProcessor
      * @param LinkProcessor|null $linkProcessor
      * @param File|null $fileDriver
+     * @param StockItemProcessorInterface|null $stockItemProcessor
      * @throws LocalizedException
      * @throws \Magento\Framework\Exception\FileSystemException
      * @SuppressWarnings(PHPMD.ExcessiveParameterList)
@@ -874,7 +880,8 @@ public function __construct(
         StatusProcessor $statusProcessor = null,
         StockProcessor $stockProcessor = null,
         LinkProcessor $linkProcessor = null,
-        ?File $fileDriver = null
+        ?File $fileDriver = null,
+        ?StockItemProcessorInterface $stockItemProcessor = null
     ) {
         $this->_eventManager = $eventManager;
         $this->stockRegistry = $stockRegistry;
@@ -938,6 +945,8 @@ public function __construct(
         $this->dateTimeFactory = $dateTimeFactory ?? ObjectManager::getInstance()->get(DateTimeFactory::class);
         $this->productRepository = $productRepository ?? ObjectManager::getInstance()
                 ->get(ProductRepositoryInterface::class);
+        $this->stockItemProcessor = $stockItemProcessor ?? ObjectManager::getInstance()
+            ->get(StockItemProcessorInterface::class);
         $this->fileDriver = $fileDriver ?: ObjectManager::getInstance()->get(File::class);
     }
 
@@ -2354,6 +2363,7 @@ protected function _saveStockItem()
     {
         while ($bunch = $this->_dataSourceModel->getNextBunch()) {
             $stockData = [];
+            $importedData = [];
             $productIdsToReindex = [];
             $stockChangedProductIds = [];
             // Format bunch to stock data rows
@@ -2379,12 +2389,13 @@ protected function _saveStockItem()
 
                 if (!isset($stockData[$sku])) {
                     $stockData[$sku] = $row;
+                    $importedData[$sku] = $rowData;
                 }
             }
 
             // Insert rows
             if (!empty($stockData)) {
-                $this->stockItemImporter->import($stockData);
+                $this->stockItemProcessor->process($stockData, $importedData);
             }
 
             $this->reindexStockStatus($stockChangedProductIds);
diff --git a/vendor/magento/module-catalog-import-export/Model/StockItemProcessor.php b/vendor/magento/module-catalog-import-export/Model/StockItemProcessor.php
new file mode 100644
index 000000000000..c1923b0d52ae
--- /dev/null
+++ b/vendor/magento/module-catalog-import-export/Model/StockItemProcessor.php
@@ -0,0 +1,33 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+declare(strict_types=1);
+
+namespace Magento\CatalogImportExport\Model;
+
+class StockItemProcessor implements StockItemProcessorInterface
+{
+    /**
+     * @var StockItemImporterInterface
+     */
+    private $stockItemImporter;
+
+    /**
+     * @param StockItemImporterInterface $stockItemImporter
+     */
+    public function __construct(
+        StockItemImporterInterface $stockItemImporter
+    ) {
+        $this->stockItemImporter = $stockItemImporter;
+    }
+
+    /**
+     * @inheritdoc
+     */
+    public function process(array $stockData, array $importedData): void
+    {
+        $this->stockItemImporter->import($stockData);
+    }
+}
diff --git a/vendor/magento/module-catalog-import-export/Model/StockItemProcessorInterface.php b/vendor/magento/module-catalog-import-export/Model/StockItemProcessorInterface.php
new file mode 100644
index 000000000000..870bddde0116
--- /dev/null
+++ b/vendor/magento/module-catalog-import-export/Model/StockItemProcessorInterface.php
@@ -0,0 +1,27 @@
+<?php
+/**
+ * Copyright © Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+declare(strict_types=1);
+
+namespace Magento\CatalogImportExport\Model;
+
+use Magento\Framework\Exception\CouldNotSaveException;
+use Magento\Framework\Exception\InputException;
+use Magento\Framework\Validation\ValidationException;
+
+interface StockItemProcessorInterface
+{
+    /**
+     * Handle Import of Stock Item Data
+     *
+     * @param array $stockData
+     * @param array $importedData
+     * @return void
+     * @throws CouldNotSaveException
+     * @throws InputException
+     * @throws ValidationException
+     */
+    public function process(array $stockData, array $importedData): void;
+}
diff --git a/vendor/magento/module-catalog-import-export/etc/di.xml b/vendor/magento/module-catalog-import-export/etc/di.xml
index c35bcbd84951..43fdda6227ac 100644
--- a/vendor/magento/module-catalog-import-export/etc/di.xml
+++ b/vendor/magento/module-catalog-import-export/etc/di.xml
@@ -8,6 +8,7 @@
 <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
     <preference for="Magento\CatalogImportExport\Model\Export\RowCustomizerInterface" type="Magento\CatalogImportExport\Model\Export\RowCustomizer\Composite" />
     <preference for="Magento\CatalogImportExport\Model\StockItemImporterInterface" type="Magento\CatalogImportExport\Model\StockItemImporter" />
+    <preference for="Magento\CatalogImportExport\Model\StockItemProcessorInterface" type="Magento\CatalogImportExport\Model\StockItemProcessor" />
     <preference for="Magento\CatalogImportExport\Model\Export\ProductFilterInterface" type="Magento\CatalogImportExport\Model\Export\ProductFilters" />
     <type name="Magento\ImportExport\Model\Import">
         <plugin name="catalogProductFlatIndexerImport" type="Magento\CatalogImportExport\Model\Indexer\Product\Flat\Plugin\Import" />
