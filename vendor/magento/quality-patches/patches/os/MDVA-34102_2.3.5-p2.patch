diff --git a/vendor/magento/module-inventory-sales-admin-ui/Model/ResourceModel/GetStockItemData.php b/vendor/magento/module-inventory-sales-admin-ui/Model/ResourceModel/GetStockItemData.php
new file mode 100644
index 00000000000..2b3c7011db6
--- /dev/null
+++ b/vendor/magento/module-inventory-sales-admin-ui/Model/ResourceModel/GetStockItemData.php
@@ -0,0 +1,88 @@
+<?php
+/**
+ * Copyright Â© Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+declare(strict_types=1);
+
+namespace Magento\InventorySalesAdminUi\Model\ResourceModel;
+
+use Magento\Framework\App\ResourceConnection;
+use Magento\Framework\Exception\LocalizedException;
+use Magento\InventorySalesApi\Model\GetStockItemDataInterface;
+use Magento\InventoryCatalogApi\Api\DefaultStockProviderInterface;
+use Magento\InventoryCatalogApi\Model\GetProductIdsBySkusInterface;
+
+/**
+ * Retrieve stock item data to show salable qty in the admin area
+ */
+class GetStockItemData implements GetStockItemDataInterface
+{
+    /**
+     * @var ResourceConnection
+     */
+    private $resource;
+
+    /**
+     * @var GetProductIdsBySkusInterface
+     */
+    private $getProductIdsBySkus;
+
+    /**
+     * @var DefaultStockProviderInterface
+     */
+    private $defaultStockProvider;
+
+    /**
+     * @var GetStockItemDataInterface
+     */
+    private $getCustomStockItemData;
+
+    /**
+     * @param ResourceConnection $resource
+     * @param DefaultStockProviderInterface $defaultStockProvider
+     * @param GetProductIdsBySkusInterface $getProductIdsBySkus
+     * @param GetStockItemDataInterface $getCustomStockItemData
+     */
+    public function __construct(
+        ResourceConnection $resource,
+        DefaultStockProviderInterface $defaultStockProvider,
+        GetProductIdsBySkusInterface $getProductIdsBySkus,
+        GetStockItemDataInterface $getCustomStockItemData
+    ) {
+        $this->resource = $resource;
+        $this->defaultStockProvider = $defaultStockProvider;
+        $this->getProductIdsBySkus = $getProductIdsBySkus;
+        $this->getCustomStockItemData = $getCustomStockItemData;
+    }
+
+    /**
+     * @inheritdoc
+     */
+    public function execute(string $sku, int $stockId): ?array
+    {
+        if ($this->defaultStockProvider->getId() !== $stockId) {
+            return $this->getCustomStockItemData->execute($sku, $stockId);
+        }
+
+        $productId = current($this->getProductIdsBySkus->execute([$sku]));
+        $connection = $this->resource->getConnection();
+        $select = $connection->select()
+            ->from(
+                $this->resource->getTableName('cataloginventory_stock_item'),
+                [
+                    GetStockItemDataInterface::QUANTITY => 'qty',
+                    GetStockItemDataInterface::IS_SALABLE => 'is_in_stock',
+                ]
+            )->where(
+                'product_id = ?',
+                $productId
+            );
+
+        try {
+            return $connection->fetchRow($select) ?: null;
+        } catch (\Exception $e) {
+            throw new LocalizedException(__('Could not receive Stock Item data'), $e);
+        }
+    }
+}
diff --git a/vendor/magento/module-inventory-sales-admin-ui/etc/adminhtml/di.xml b/vendor/magento/module-inventory-sales-admin-ui/etc/adminhtml/di.xml
index 37c3b4688e7..9fce5d23d70 100644
--- a/vendor/magento/module-inventory-sales-admin-ui/etc/adminhtml/di.xml
+++ b/vendor/magento/module-inventory-sales-admin-ui/etc/adminhtml/di.xml
@@ -29,4 +29,14 @@
     <type name="Magento\InventoryApi\Api\StockRepositoryInterface">
         <plugin name="add_notice_for_unassigned_sales_channels" type="Magento\InventorySalesAdminUi\Plugin\InventoryApi\StockRepository\AddNoticeForUnassignedSalesChannels" sortOrder="10"/>
     </type>
+    <virtualType name="GetProductSalableQtyAdminUi" type="Magento\InventorySales\Model\GetProductSalableQty">
+        <arguments>
+            <argument name="getStockItemData" xsi:type="object">Magento\InventorySalesAdminUi\Model\ResourceModel\GetStockItemData</argument>
+        </arguments>
+    </virtualType>
+    <type name="Magento\InventorySalesAdminUi\Model\GetSalableQuantityDataBySku">
+        <arguments>
+            <argument name="getProductSalableQty" xsi:type="object">GetProductSalableQtyAdminUi</argument>
+        </arguments>
+    </type>
 </config>
