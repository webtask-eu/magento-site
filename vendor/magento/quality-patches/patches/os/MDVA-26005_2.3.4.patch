diff --git a/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewActionHtml.php b/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewActionHtml.php
index 56c08864c90..af28547456a 100644
--- a/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewActionHtml.php
+++ b/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewActionHtml.php
@@ -47,6 +47,7 @@ class NewActionHtml extends Quote implements HttpPostActionInterface
         if ($model instanceof AbstractCondition) {
             $model->setJsFormObject($formName);
             $model->setFormName($formName);
+            $this->setJsFormObject($model);
             $html = $model->asHtmlRecursive();
         } else {
             $html = '';
@@ -54,4 +55,32 @@ class NewActionHtml extends Quote implements HttpPostActionInterface
         $this->getResponse()
             ->setBody($html);
     }
+
+    /**
+     * Set jsFormObject for the model object
+     *
+     * @return void
+     * @param AbstractCondition $model
+     */
+    private function setJsFormObject(AbstractCondition $model): void
+    {
+        $requestJsFormName = $this->getRequest()->getParam('form');
+        $actualJsFormName = $this->getJsFormObjectName($model->getFormName());
+        if ($requestJsFormName === $actualJsFormName) { //new
+            $model->setJsFormObject($actualJsFormName);
+        } else { //edit
+            $model->setJsFormObject($requestJsFormName);
+        }
+    }
+
+    /**
+     * Get jsFormObject name
+     *
+     * @param string $formName
+     * @return string
+     */
+    private function getJsFormObjectName(string $formName): string
+    {
+        return $formName . 'rule_actions_fieldset_';
+    }
 }
diff --git a/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewConditionHtml.php b/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewConditionHtml.php
index 50545fd8648..3646f9592c4 100644
--- a/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewConditionHtml.php
+++ b/vendor/magento/module-sales-rule/Controller/Adminhtml/Promo/Quote/NewConditionHtml.php
@@ -6,11 +6,13 @@
 namespace Magento\SalesRule\Controller\Adminhtml\Promo\Quote;

 use Magento\Framework\App\Action\HttpPostActionInterface;
+use Magento\Rule\Model\Condition\AbstractCondition;
+use Magento\SalesRule\Controller\Adminhtml\Promo\Quote;

 /**
  * Controller class NewConditionHtml. Returns condition html
  */
-class NewConditionHtml extends \Magento\SalesRule\Controller\Adminhtml\Promo\Quote implements HttpPostActionInterface
+class NewConditionHtml extends Quote implements HttpPostActionInterface
 {
     /**
      * New condition html action
@@ -39,13 +41,40 @@ class NewConditionHtml extends \Magento\SalesRule\Controller\Adminhtml\Promo\Quo
             $model->setAttribute($typeArr[1]);
         }

-        if ($model instanceof \Magento\Rule\Model\Condition\AbstractCondition) {
+        if ($model instanceof AbstractCondition) {
             $model->setJsFormObject($this->getRequest()->getParam('form'));
             $model->setFormName($formName);
+            $this->setJsFormObject($model);
             $html = $model->asHtmlRecursive();
         } else {
             $html = '';
         }
         $this->getResponse()->setBody($html);
     }
+
+    /**
+     * Set jsFormObject for the model object
+     *
+     * @return void
+     * @param AbstractCondition $model
+     */
+    private function setJsFormObject(AbstractCondition $model): void
+    {
+        $requestJsFormName = $this->getRequest()->getParam('form');
+        $actualJsFormName = $this->getJsFormObjectName($model->getFormName());
+        if ($requestJsFormName === $actualJsFormName) { //new
+            $model->setJsFormObject($actualJsFormName);
+        }
+    }
+
+    /**
+     * Get jsFormObject name
+     *
+     * @param string $formName
+     * @return string
+     */
+    private function getJsFormObjectName(string $formName): string
+    {
+        return $formName . 'rule_conditions_fieldset_';
+    }
 }
