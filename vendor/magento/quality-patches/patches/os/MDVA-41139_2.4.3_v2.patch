diff --git a/vendor/magento/module-inventory-import-export/Plugin/Import/UpdateConfigurableProductsPlugin.php b/vendor/magento/module-inventory-import-export/Plugin/Import/UpdateConfigurableProductsPlugin.php
new file mode 100644
index 00000000000..ca1f54066ab
--- /dev/null
+++ b/vendor/magento/module-inventory-import-export/Plugin/Import/UpdateConfigurableProductsPlugin.php
@@ -0,0 +1,56 @@
+<?php
+/**
+ * Copyright Â© Magento, Inc. All rights reserved.
+ * See COPYING.txt for license details.
+ */
+declare(strict_types=1);
+
+namespace Magento\InventoryImportExport\Plugin\Import;
+
+use Magento\CatalogImportExport\Model\StockItemImporterInterface;
+use Magento\ConfigurableProduct\Model\Inventory\ChangeParentStockStatus;
+use Magento\InventoryCatalogApi\Model\IsSingleSourceModeInterface;
+
+class UpdateConfigurableProductsPlugin
+{
+    /**
+     * @var ChangeParentStockStatus
+     */
+    private $changeParentStockStatus;
+
+    /**
+     * @var IsSingleSourceModeInterface
+     */
+    private $isSingleSourceMode;
+
+    /**
+     * @param ChangeParentStockStatus $changeParentStockStatus
+     * @param IsSingleSourceModeInterface $isSingleSourceMode
+     */
+    public function __construct(
+        ChangeParentStockStatus $changeParentStockStatus,
+        IsSingleSourceModeInterface $isSingleSourceMode
+    ) {
+        $this->changeParentStockStatus = $changeParentStockStatus;
+        $this->isSingleSourceMode = $isSingleSourceMode;
+    }
+
+    /**
+     * Update configurable products stock item status based on children products stock status after import
+     *
+     * @param StockItemImporterInterface $subject
+     * @param void $result
+     * @param array $stockData
+     * @return void
+     * @SuppressWarnings(PHPMD.UnusedFormalParameter)
+     */
+    public function afterImport(
+        StockItemImporterInterface $subject,
+        $result,
+        array $stockData
+    ): void {
+        if ($stockData && $this->isSingleSourceMode->execute()) {
+            $this->changeParentStockStatus->execute(array_column($stockData, 'product_id'));
+        }
+    }
+}
diff --git a/vendor/magento/module-inventory-import-export/etc/di.xml b/vendor/magento/module-inventory-import-export/etc/di.xml
index 6f0657decfd..5d0db315768 100644
--- a/vendor/magento/module-inventory-import-export/etc/di.xml
+++ b/vendor/magento/module-inventory-import-export/etc/di.xml
@@ -26,10 +26,10 @@
             </argument>
         </arguments>
     </type>
-
-    <!-- Source Item Import Plugin -->
     <type name="Magento\CatalogImportExport\Model\StockItemImporterInterface">
+        <plugin name="updateConfigurableProductsStockItemStatusInventory" type="Magento\InventoryImportExport\Plugin\Import\UpdateConfigurableProductsPlugin" sortOrder="100" />
         <plugin name="importStockItemDataForSourceItem" type="Magento\InventoryImportExport\Plugin\Import\SourceItemImporter" />
+        <plugin name="update_configurable_products_stock_item_status" disabled="true"/>
     </type>
     <!-- Prevent stock indexer to execute twice as it is run by default -->
     <type name="Magento\CatalogImportExport\Model\Import\Product\StockProcessor">
@@ -42,7 +42,7 @@

     <!-- Export -->
     <preference for="Magento\InventoryImportExport\Model\Export\SourceItemCollectionFactoryInterface" type="Magento\InventoryImportExport\Model\Export\SourceItemCollectionFactory"/>
-    <preference for="Magento\InventoryImportExport\Model\Export\ColumnProviderInterface" type="\Magento\InventoryImportExport\Model\Export\ColumnProvider"/>
+    <preference for="Magento\InventoryImportExport\Model\Export\ColumnProviderInterface" type="Magento\InventoryImportExport\Model\Export\ColumnProvider"/>
     <type name="Magento\InventoryImportExport\Model\Export\FilterProcessorAggregator">
         <arguments>
             <argument name="handler" xsi:type="array">
