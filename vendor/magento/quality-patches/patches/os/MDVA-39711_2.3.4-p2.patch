diff --git a/vendor/magento/module-customer/Ui/Component/Listing/Column/Confirmation.php b/vendor/magento/module-customer/Ui/Component/Listing/Column/Confirmation.php
index 1786c52844a..0f8e704f8b3 100644
--- a/vendor/magento/module-customer/Ui/Component/Listing/Column/Confirmation.php
+++ b/vendor/magento/module-customer/Ui/Component/Listing/Column/Confirmation.php
@@ -6,6 +6,7 @@
 namespace Magento\Customer\Ui\Component\Listing\Column;

 use Magento\Framework\App\Config\ScopeConfigInterface;
+use Magento\Framework\Exception\NoSuchEntityException;
 use Magento\Framework\View\Element\UiComponent\ContextInterface;
 use Magento\Framework\View\Element\UiComponentFactory;
 use Magento\Ui\Component\Listing\Columns\Column;
@@ -28,7 +29,7 @@ class Confirmation extends Column
      * @param ScopeConfigInterface $scopeConfig @deprecated
      * @param array $components
      * @param array $data
-     * @param AccountConfirmation $accountConfirmation
+     * @param AccountConfirmation|null $accountConfirmation
      * @SuppressWarnings(PHPMD.UnusedFormalParameter)
      */
     public function __construct(
@@ -65,13 +66,7 @@ class Confirmation extends Column
      */
     private function getFieldLabel(array $item)
     {
-        $isConfirmationRequired = $this->accountConfirmation->isConfirmationRequired(
-            $item['website_id'][0],
-            $item[$item['id_field_name']],
-            $item['email']
-        );
-
-        if ($isConfirmationRequired) {
+        if ($this->getIsConfirmationRequired($item)) {
             if ($item[$this->getData('name')] === null) {
                 return __('Confirmed');
             }
@@ -79,4 +74,27 @@ class Confirmation extends Column
         }
         return __('Confirmation Not Required');
     }
+
+    /**
+     * Retrieve is confirmation required flag for customer considering requested website may not exist.
+     *
+     * @param array $customer
+     * @return bool
+     */
+    private function getIsConfirmationRequired(array $customer): bool
+    {
+        try {
+            return $this->accountConfirmation->isConfirmationRequired(
+                $customer['website_id'][0] ?? null,
+                $customer[$customer['id_field_name']],
+                $customer['email']
+            );
+        } catch (NoSuchEntityException $e) {
+            return $this->accountConfirmation->isConfirmationRequired(
+                null,
+                $customer[$customer['id_field_name']],
+                $customer['email']
+            );
+        }
+    }
 }
